/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Rapport as PrismaRapport } from "@prisma/client";

export class RapportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RapportCountArgs, "select">): Promise<number> {
    return this.prisma.rapport.count(args);
  }

  async rapports(args: Prisma.RapportFindManyArgs): Promise<PrismaRapport[]> {
    return this.prisma.rapport.findMany(args);
  }
  async rapport(
    args: Prisma.RapportFindUniqueArgs
  ): Promise<PrismaRapport | null> {
    return this.prisma.rapport.findUnique(args);
  }
  async createRapport(args: Prisma.RapportCreateArgs): Promise<PrismaRapport> {
    return this.prisma.rapport.create(args);
  }
  async updateRapport(args: Prisma.RapportUpdateArgs): Promise<PrismaRapport> {
    return this.prisma.rapport.update(args);
  }
  async deleteRapport(args: Prisma.RapportDeleteArgs): Promise<PrismaRapport> {
    return this.prisma.rapport.delete(args);
  }
}
