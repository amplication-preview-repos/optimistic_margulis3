/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PointAchat as PrismaPointAchat } from "@prisma/client";

export class PointAchatServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PointAchatCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pointAchat.count(args);
  }

  async pointAchats(
    args: Prisma.PointAchatFindManyArgs
  ): Promise<PrismaPointAchat[]> {
    return this.prisma.pointAchat.findMany(args);
  }
  async pointAchat(
    args: Prisma.PointAchatFindUniqueArgs
  ): Promise<PrismaPointAchat | null> {
    return this.prisma.pointAchat.findUnique(args);
  }
  async createPointAchat(
    args: Prisma.PointAchatCreateArgs
  ): Promise<PrismaPointAchat> {
    return this.prisma.pointAchat.create(args);
  }
  async updatePointAchat(
    args: Prisma.PointAchatUpdateArgs
  ): Promise<PrismaPointAchat> {
    return this.prisma.pointAchat.update(args);
  }
  async deletePointAchat(
    args: Prisma.PointAchatDeleteArgs
  ): Promise<PrismaPointAchat> {
    return this.prisma.pointAchat.delete(args);
  }
}
