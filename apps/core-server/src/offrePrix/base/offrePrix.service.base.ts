/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OffrePrix as PrismaOffrePrix } from "@prisma/client";

export class OffrePrixServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OffrePrixCountArgs, "select">
  ): Promise<number> {
    return this.prisma.offrePrix.count(args);
  }

  async offrePrixes(
    args: Prisma.OffrePrixFindManyArgs
  ): Promise<PrismaOffrePrix[]> {
    return this.prisma.offrePrix.findMany(args);
  }
  async offrePrix(
    args: Prisma.OffrePrixFindUniqueArgs
  ): Promise<PrismaOffrePrix | null> {
    return this.prisma.offrePrix.findUnique(args);
  }
  async createOffrePrix(
    args: Prisma.OffrePrixCreateArgs
  ): Promise<PrismaOffrePrix> {
    return this.prisma.offrePrix.create(args);
  }
  async updateOffrePrix(
    args: Prisma.OffrePrixUpdateArgs
  ): Promise<PrismaOffrePrix> {
    return this.prisma.offrePrix.update(args);
  }
  async deleteOffrePrix(
    args: Prisma.OffrePrixDeleteArgs
  ): Promise<PrismaOffrePrix> {
    return this.prisma.offrePrix.delete(args);
  }
}
